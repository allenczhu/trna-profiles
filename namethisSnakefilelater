'''
Author: Allen Zhu
Affiliation: Meren Lab at the University of Chicago
Aim: A simple Snakemake workflow to automate the processing of database files into anvi-profiles.
Date: Wed Sep 27
Run: snakemake (-s Snakefile) 
'''

BASE_DIR = "/Users/allenzhu/Google\ Drive/\[Rotation_Meren-and-Pan\]/tRNA-profiles/"

SAMPLES = ['tRNA-DM-HF-M01', 'tRNA-DM-HF-M02', 'tRNA-DM-HF-M03', 'tRNA-DM-HF-M01', 'tRNA-DM-HF-M02', 'tRNA-DM-HF-M03',\
           'tRNA-HF-M01', 'tRNA-HF-M02', 'tRNA-HF-M03', 'tRNA-LF-M01', 'tRNA-LF-M02', 'tRNA-LF-M03']

# Activate tRNA-seq-tools
print('First, activating tRNA-seq-tools.')
shell: "trna-seq-tools-activate"

print(expand("hello_{sample}", sample=SAMPLES))

# Rules

rule all:
    input:
        expand('anvi_profile_{sample}.db', sample=SAMPLES)

rule db_to_fasta:
    input:
        'tRNA-db-profiles/{sample}'
    output:
        full_length_fasta = 'tRNA-db-profiles/full_length_reads_{sample}.fa',    
        all_read_fasta = 'tRNA-db-profiles/all_reads_{sample}.fa'
    shell:
        'touch filenamehere.log '
        '''
        trna-get-sequences -p {input} -o {output.full_lengh_fasta} --full-length-only
        trna-get-sequences -p {input} -o {output.all_read_fasta}
        '''

rule bowtie_build_index:
    input:
        'tRNA-db-profiles/full_length_reads_{sample}.fa'
    output:
        'OUTPUT-from-snakemake/seed_index_{sample}'
    shell:
        'bowtie2-build {input} {output}'

rule bowtie_map_reads_onto_refs:
    input:
        all_reads_fasta = 'tRNA-db-profiles/all_reads_{sample}.fa',
        seed_index = 'OUTPUT-from-snakemake/seed_index_{sample}'
    output:
        all_reads_sam = 'OUTPUT-from-snakemake/sam_file_{sample}'
    threads: 4
    shell:
        'bowtie2 --threads {threads} -x {input.seed_index} -f {input.all_reads_fasta} -S {output}'

rule sam_to_bam:
    input:
        'OUTPUT-from-snakemake/sam_file_{sample}'
    output:
        'OUTPUT-from-snakemake/raw_bam_{sample}'
    shell:
        'samtools view -F 4 -bS {input} > {output}'

rule anvi_init_bam:
    input:
        'OUTPUT-from-snakemake/raw_bam_{sample}'
    output:
        'OUTPUT-from-snakemake/bam_{sample}'
    shell:
        'anvi-init-bam {input} -o {output}'

'''
rule remove_unncessary_files_maybeoptional:
    input: 
        NAMEOFINDEXHERE
        nameofrawbamfile
        nameofsamfile
    shell:
        'rm samfile rawbamfile indexfiles'
'''

rule anvi_gen_contigs_db:
    input: 
        'tRNA-db-profiles/full_length_reads_{sample}.fa'
    output:
        'tRNA-db-profiles/full_length_reads_{sample}.db'
    shell:
        'anvi-gen-contigs-database -f {input} -o {output}'

rule anvi_run_hmms_highly_recommended:
    input:
        'tRNA-db-profiles/full_length_reads_{sample}.db'
    shell:
        'anvi-run-hmms -c {input}'

rule anvi_profile:
    input:
        'OUTPUT-from-snakemake/bam_{sample}',
        'tRNA-db-profiles/full_length_reads_{sample}.db'
    output:
        'anvi_profile_{sample}'
    params:
        min_contig_length = 0,
        output_dir = 'anvi-profiles'
    shell:
        'anvi-profile -i {input[0]} -c {input[1]} -M {params.min_contig_length} --output-dir {params.output_dir} --sample-name {output}'

rule anvi_merge:
